unit view.clientes;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Classes,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  view.base.lista,
  Data.DB,
  Vcl.Grids,
  Vcl.DBGrids,
  Vcl.StdCtrls,
  Vcl.ComCtrls,
  Vcl.Buttons,
  Vcl.Imaging.pngimage,
  Vcl.ExtCtrls,
  Vcl.Mask,
  Vcl.DBCtrls, botoes;

type
  TviewClientes = class(TviewBaseListas)
    lblID: TLabel;
    lblRazao: TLabel;
    lblTelefone: TLabel;
    edtTelefone: TDBEdit;
    lblCPF: TLabel;
    edtCPF: TDBEdit;
    lblRG: TLabel;
    edtRG: TDBEdit;
    lblObs: TLabel;
    edtObs: TDBEdit;
    lblEndereco: TLabel;
    edtEndereco: TDBEdit;
    lblCidade: TLabel;
    edtCidade: TDBEdit;
    lblUf: TLabel;
    edtUf: TDBEdit;
    edtRazao: TDBEdit;
    DBGrid1: TDBGrid;
    lblCNPJ: TLabel;
    lblIE: TLabel;
    edtCNPJ: TDBEdit;
    edtIE: TDBEdit;
    lblData: TLabel;
    edtData: TDBEdit;
    dbTxtID: TDBText;
    dbRgTipoPessoa: TDBRadioGroup;
    procedure btnEditarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure dbGridDblClick(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnPesquisaClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure dbRgTipoPessoaChange(Sender: TObject);
    procedure tsConsultaShow(Sender: TObject);

  private
  var
    lCrudBotoes: TBotoes;
    procedure habilitaDesabilitaTipoPessoa(status: Boolean);

  public

  end;

var
  viewClientes: TviewClientes;

implementation

uses
  dm.conexao;

{$R *.dfm}

procedure TviewClientes.btnCancelarClick(Sender: TObject);
begin
  inherited;
  try
    lCrudBotoes.botaoCancelar(DmConexao.sdsClientes);
  finally
    lCrudBotoes.Free;
  end;
  PageControl1.TabIndex := 1;
end;

procedure TviewClientes.btnEditarClick(Sender: TObject);
begin
  inherited;
  PageControl1.TabIndex := 0;
  edtRazao.SetFocus;
  try
    lCrudBotoes.botaoEditar(DmConexao.sdsClientes,
      DmConexao.sdsClientes.FieldByName('DATA_CADASTRO'));
  finally
    lCrudBotoes.Free;
  end;
end;

procedure TviewClientes.btnExcluirClick(Sender: TObject);
begin
  inherited;
  try
    lCrudBotoes.botaoExcluir(DmConexao.sdsClientes);
  finally
    lCrudBotoes.Free;
  end;
end;

procedure TviewClientes.btnNovoClick(Sender: TObject);
begin
  inherited;
  PageControl1.TabIndex := 0;
  try
    lCrudBotoes.botaoNovo(DmConexao.sdsClientes, 'CLIENTE_ID',
      DmConexao.sdsClientesDATA_CADASTRO);
  finally
    lCrudBotoes.Free;
  end;
  edtRazao.SetFocus;
end;

procedure TviewClientes.btnPesquisaClick(Sender: TObject);
// as pesquisas abaixo necessitam fazer todo esse trabalho de abrir e fechar os datasets
// e usam os metodos de pesquisa e oas filters
// essa trabalho manual deve ser feito para cada Grid
begin
  inherited;
  edtPesquisa.SetFocus;

  if Trim(edtPesquisa.Text) = '' then
  begin

    MessageDlg('Descrição não informada.', mtInformation, [mbOK], 0);
    DmConexao.sdsClientes.Filtered := False;
    DmConexao.sdsClientes.SQL.Text := 'select * from CLIENTES';
    DmConexao.sdsClientes.Open;
    edtPesquisa.SetFocus;
    exit;
  end;

  if DBGrid1.SelectedField.FieldName = 'CLIENTE_ID' then
  begin
    DmConexao.sdsClientes.Filtered := False;
    DmConexao.sdsClientes.Filter := 'CLIENTE_ID = ' +
      IntToStr(strtoint(edtPesquisa.Text));
    DmConexao.sdsClientes.Filtered := True;
  end
  else if DBGrid1.SelectedField.FieldName = 'CLIENTE_RAZAO' then
  begin

    DmConexao.sdsClientes.Filtered := False;
    DmConexao.sdsClientes.Filter := 'CLIENTE_RAZAO LIKE ' +
      QuotedStr('%' + edtPesquisa.Text + '%');
    DmConexao.sdsClientes.Filtered := True;
  end;
end;

procedure TviewClientes.btnSalvarClick(Sender: TObject);
begin
  if DmConexao.sdsClientesCLIENTE_TIPO.AsString.IsEmpty then
  begin
    MessageDlg('Informe o tipo pessoa.', mtInformation, [mbOK], 0);
    exit;
  end;
  inherited;

  try
    lCrudBotoes.botaoSalvar(DmConexao.sdsClientes,'Cliente salvo com sucesso!');
  finally
    lCrudBotoes.Free;
  end;
  PageControl1.TabIndex := 1;
end;

procedure TviewClientes.dbGridDblClick(Sender: TObject);
begin
  inherited;
  PageControl1.TabIndex := 0;
  DmConexao.sdsClientes.Edit;
  edtRazao.SetFocus;
end;

procedure TviewClientes.dbRgTipoPessoaChange(Sender: TObject);
begin
  inherited;
  if dbRgTipoPessoa.ItemIndex = 0 then
    habilitaDesabilitaTipoPessoa(True)
  else
    habilitaDesabilitaTipoPessoa(False);
end;

procedure TviewClientes.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  DmConexao.sdsClientes.Close;
end;

procedure TviewClientes.FormCreate(Sender: TObject);
begin
  inherited;
  DmConexao.sdsClientes.Open;
end;

procedure TviewClientes.FormShow(Sender: TObject);
begin
  inherited;
  habilitaDesabilitaTipoPessoa(True);
end;

procedure TviewClientes.habilitaDesabilitaTipoPessoa(status: Boolean);
begin
  lblCPF.Visible := status;
  lblRG.Visible := status;
  edtCPF.Visible := status;
  edtRG.Visible := status;
  lblCNPJ.Visible := not status;
  lblIE.Visible := not status;
  edtCNPJ.Visible := not status;
  edtIE.Visible := not status;
end;

procedure TviewClientes.tsConsultaShow(Sender: TObject);
begin
  inherited;
  DmConexao.sdsClientes.Open;
end;

end.
